betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
View(betas)
apply(betas, 1, sd)
apply(betas, 1, sd)
y <- x1 + rnorm(n, sd = .3)
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
a <- summary(fit1)$cov.unscaled[2,2]
fit2 <- update(fit, Fertility ~ Agriculture + Examination)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
c(summary(fit2)$cov.unscaled[2,2],
summary(fit3)$cov.unscaled[2,2]) / a
data(swiss);
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit1
a <- summary(fit1)$cov.unscaled[2,2]
a
fit2 <- update(fit, Fertility ~ Agriculture + Examination)
fit2 <- update(fit1, Fertility ~ Agriculture + Examination)
fit2
fit3 <- update(fit1, Fertility ~ Agriculture + Examination + Education)
fit3
c(summary(fit2)$cov.unscaled[2,2],
summary(fit3)$cov.unscaled[2,2]) / a
library(car)
fit <- lm(Fertility ~.,data = swiss)
?vif
vif(fit)
sqrt(vif(fit))
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- update(fit1, Fertility ~ Agriculture + Examination + Education)
fit5 <- update(fit1, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
anova(fit1, fit3, fit5)
data(mtcar)
data(mtcars)
mtcars
?mrcars
?mtcars
?step
?mtcars
library("knitr", lib.loc="C:/Program Files/R/R-3.1.2/library")
?mtcars
data(mtcars)
mtcars
View(mtcars)
str(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$am <- factor(mtcars$am, labels = c("Automatic","Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
str(mtcars)
mtcars$am
mtcars$gear
mtcars$carb
boxplot(mpg ~ am, data = mtcars)
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"))
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"),
name = c("Automatic","Manual"))
# create boxplot to explore the MPG between different transmission
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"),
name = c("automatic","manual"))
# create boxplot to explore the MPG between different transmission
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"),
names = c("automatic","manual"))
?boxplot
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"))
?mtcar
?mtcars
View(mtcars)
?pairs
pairwise <- pairs(mtcars,main = "Pairwise plot of mtcars")
?pairs
pairwise <- pairs(mtcars,panel = panel.smooth,main = "Pairwise plot of mtcars")
?cov
?cov2cor
cov2cor(cov(sapply(mtcars,as.numeric)))
cov(sapply(mtcars,as.numeric))
allInmodel <-lm(mpg ~., data = mtcars)
summary(allInmodel)
summary(allInmodel)$coef
summary(allInmodel)$coeff
pairwise <- pairs(mtcars,panel = panel.smooth,main = "Pairwise plot of mtcars")
data(mtcars)
# convert qualitative variables to factors
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$am <- factor(mtcars$am, labels = c("Automatic","Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
# create boxplot to explore the MPG between different transmission
## Figure1
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"))
# check the correlation between every value
## Figure2
# create a pairwise plot of mtcars
pairwise <- pairs(mtcars,panel = panel.smooth,main = "Pairwise plot of mtcars")
## Figure3
# check the correlation of variances between every value
cov2cor(cov(sapply(mtcars,as.numeric)))
## Figure4
# Model using all value  to find the most significant predictors
allInmodel <-lm(mpg ~., data = mtcars)
summary(allInmodel)$coef
cov2cor(cov(sapply(mtcars,as.numeric)))
allInmodel <-lm(mpg ~., data = mtcars)
summary(allInmodel)$coef
?mtcars
?step
newmodel <- step(lm(mpg ~., data = mtcars))
new_model$coef
newmodel$coef
allInmodel$coef
summary(newmodel)$coef
?anova
summary(newmodel)$r.squared
summary(allInmode)$r.squared
summary(newmodel)$r.squared
allInmodel <-lm(mpg ~., data = mtcars)
summary(allInmodel)$coef
allInmodel$coef
summary(allInmode)$r.squared
summary(newmodel)$r.squared
summary(allInmodel)$r.squared
summary(newmodel)$r.squared
data(mtcars)
# convert qualitative variables to factors
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$am <- factor(mtcars$am, labels = c("Automatic","Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
# create boxplot to explore the MPG between different transmission
## Figure1
summary(mtcars$mpg[mtcars$am=="Automatic"] )
summary(mtcars$mpg[mtcars$am=="Manual"] )
sd(mtcars$mpg[mtcars$am=="Automatic"])
sd(mtcars$mpg[mtcars$am=="Manual"])
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"))
# check the correlation between every value
## Figure2
# create a pairwise plot of mtcars
pairwise <- pairs(mtcars,panel = panel.smooth,main = "Pairwise plot of mtcars")
## Figure3
# check the correlation of variances between every value
cov2cor(cov(sapply(mtcars,as.numeric)))
## Figure4
# Using all variables to fit model to find the most significant predictors
allInmodel <-lm(mpg ~., data = mtcars)
summary(allInmodel)$coef
allInmodel$coef
## Figure5
# Comparing two model with "am"" no adjusetd and add "wt" and "hp"
ammodel <- lm(mpg ~ am, data = mtcars))
adjustmodel <- lm(mpg ~ am + wt + hp, data = mtcars)
## Figure6
# calculate R squared in two models and perform the ANOVA.
summary(ammdoel)$r.squared
summary(adjustmodel)$r.squared
anove(ammodel,adjustmodel)
## Figure5
# Comparing two model with "am"" no adjusetd and add "wt" and "hp"
ammodel <- lm(mpg ~ am, data = mtcars)
adjustmodel <- lm(mpg ~ am + wt + hp, data = mtcars)
## Figure6
# calculate R squared in two models and perform the ANOVA.
summary(ammdoel)$r.squared
summary(adjustmodel)$r.squared
anove(ammodel,adjustmodel)
ammodel <- lm(mpg ~ am, data = mtcars)
adjustmodel <- lm(mpg ~ am + wt + hp, data = mtcars)
summary(ammdoel)$r.squared
summary(ammodel)$r.squared
summary(adjustmodel)$r.squared
anova(ammodel,adjustmodel)
?hatvalues
hatvalues(adjustmodel)
plot(adjustmodel)
hist(adjustmodel)$residual
hist(adjustmodel)$residual
par(mfrow = c(2,2))
plot(adjustmodel)
hist(adjustmodel$residual)
par(mfrow = c(2,2))
plot(adjustmodel)
hist(adjustmodel$residual)
par(mfrow = c(2,2))
plot(adjustmodel)
t.test(mpg ~ am, data = mtcars)
#8 cylinders to 4.
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
summary(fit)$coef
mtcars
data(mtcars)
mtcars
mtcars$cyl <- factor(mtcars$cyl)
mtcars
fit <- lm(mpg ~ cyl + wt, data=mtcars)
summary(fit)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl, data=mtcars)
fitadjust <- lm(mpg ~ cyl + wt, data = mtcars)
summary(fit)
summary(fitadjust)
summary(fit)$coef
summary(fitadjust)$coef
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
ft2 <- lm(mpg ~ cyl + wt, data=mtcars)
anova(fit,fit2)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
fit2 <- lm(mpg ~ cyl + wt, data=mtcars)
anova(fit,fit2)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
fit2 <- lm(mpg ~ cyl + wt + interaction(cyl + wt), data=mtcars)
anova(fit,fit2)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
fit2 <- lm(mpg ~ cyl + wt + interaction(cyl + wt), data=mtcars)
fit2 <- lm(mpg ~ cyl + wt + interaction(cyl + wt), data=mtcars)
str(mtcars)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
fit2 <- lm(mpg ~ cyl + wt + interaction(cyl + wt), data=mtcars)
str(mtcars)
anova(fit,fit2)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt + interaction(cyl, wt), data = mtcars)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
fit2 <- lm(mpg ~ cyl + wt + interaction(cyl,wt), data=mtcars)
str(mtcars)
anova(fit,fit2)
data(mtcars)
mtcars
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
summary(fit)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl, data=mtcars)
fitadjust <- lm(mpg ~ cyl + wt, data = mtcars)
summary(fit)$coef
summary(fitadjust)$coef
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, data=mtcars)
fit2 <- lm(mpg ~ cyl + wt + interaction(cyl,wt), data=mtcars)
str(mtcars)
anova(fit,fit2)
fit1<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit2<-lm(mpg ~ wt + factor(cyl), data = mtcars)
summary(fit1)$coef
summary(fit2)$coef
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(x,y)
fit <- lm(y ~ x)
abline(fit)
hatvalues(fit)
?hatvalues
plot(x,y)
fit <- lm(y ~ x)
abline(fit)
dfbeta(fit)
fit <- lm(y ~ x)
dfbetas(fit)
?dfbetas
dfbetas(fit)
data(mtcars)
# convert qualitative variables to factors
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$am <- factor(mtcars$am, labels = c("Automatic","Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
# create boxplot to explore the MPG between different transmission
## Figure1
summary(mtcars$mpg[mtcars$am=="Automatic"] )
summary(mtcars$mpg[mtcars$am=="Manual"] )
sd(mtcars$mpg[mtcars$am=="Automatic"])
sd(mtcars$mpg[mtcars$am=="Manual"])
boxplot(mpg ~ am, data = mtcars,
xlab = "Transmission Type", ylab = "Mile Per Gallon",
main = "MPG vs Transmission", col = c("salmon","steelblue"))
# check the correlation between every value
## Figure2
# create a pairwise plot of mtcars
pairwise <- pairs(mtcars,panel = panel.smooth,main = "Pairwise plot of mtcars")
## Figure3
# check the correlation of variances between every value
cov2cor(cov(sapply(mtcars,as.numeric)))
## Figure4
# Using all variables to fit model to find the most significant predictors
allInmodel <-lm(mpg ~., data = mtcars)
summary(allInmodel)$coef
allInmodel$coef
## Figure5
# Comparing two model with "am"" no adjusetd and add "wt" and "hp"
ammodel <- lm(mpg ~ am, data = mtcars)
adjustmodel <- lm(mpg ~ am + wt + hp, data = mtcars)
hatvalues(adjustmodel)
dfbetas(adjustmodel)
hatvalues(adjustmodel)
lev_meas <- hatvalues(adjustmodel)
tail(sort(lev_meas),5)
#dfbetas
dfbetas(adjustmodel)
inf_meas <- dfbetas(adjustmodel)
tail(sort(inf_meas[,5],5)
)
hatvalues(adjustmodel)
lev_meas <- hatvalues(adjustmodel)
tail(sort(lev_meas),5))
#dfbetas
dfbetas(adjustmodel)
inf_meas <- dfbetas(adjustmodel)
tail(sort(inf_meas[,5],5))
hatvalues(adjustmodel)
lev_meas <- hatvalues(adjustmodel)
tail(sort(lev_meas),5)
#dfbetas
dfbetas(adjustmodel)
inf_meas <- dfbetas(adjustmodel)
tail(sort(inf_meas[,5]),5)
tail(sort(inf_meas[,4]),5)
tail(sort(lev_meas),5)
?dpois
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
, destfile="./data/ravensData.rda",method="curl")
setwd("D:/JOHNS HOPKINS Data Science Program/Regression Models")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
, destfile="./data/ravensData.rda",method="curl")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
, destfile="./data/ravensData.rda",method="curl")
load("./data/ravensData.rda")
View(ravensData)
head(ravensData)
View(ravensData)
lmRavens <- lm(ravensData$ravenWinNum ~ ravensData$ravenScore)
summary(lmRavens)$coef
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 = slider(-2, 2, step = .1, initial = 2),
beta0 = slider(-2, 2, step = .1, initial = 0)
)
?manipulate
library("manipulate", lib.loc="C:/Program Files/R/R-3.1.2/library")
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 = slider(-2, 2, step = .1, initial = 2),
beta0 = slider(-2, 2, step = .1, initial = 0)
)
x <- seq(-10, 10, length = 1000)
manipulate(
plot(x, exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x)),
type = "l", lwd = 3, frame = FALSE),
beta1 = slider(-2, 2, step = .1, initial = 2),
beta0 = slider(-2, 2, step = .1, initial = 0)
)
logRegRavens <- glm(ravensData$ravenWinNum ~ ravensData$ravenScore,family="binomial")
summary(logRegRavens)
summary(lmRavens)$coef
summary(logRegRavens)$coef
# Ravens fitted values
plot(ravensData$ravenScore,logRegRavens$fitted,pch=19,col="blue",xlab="Score",ylab="Prob Ravens Win")
logRegRavens$fitted
exp(logRegRavens$coeff)
exp(confint(logRegRavens))
anova(logRegRavens,test="Chisq")
par(mfrow = c(1, 3))
plot(0 : 10, dpois(0 : 10, lambda = 2), type = "h", frame = FALSE)
dpois(0 : 10, lambda = 2)
?dpois
plot(0 : 20, dpois(0 : 20, lambda = 10), type = "h", frame = FALSE)
dpois(0 : 20, lambda = 10)
plot(0 : 200, dpois(0 : 200, lambda = 100), type = "h", frame = FALSE)
dpois(0 : 200, lambda = 100)
x <- 0 : 10000; lambda = 3
dpois(x, lambda = lambda)
mu <- sum(x * dpois(x, lambda = lambda))
mu
mu <- sum(x * dpois(x, lambda = lambda))
sigmasq <- sum((x - mu)^2 * dpois(x, lambda = lambda))
c(mu, sigmasq)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda",method="curl")
load("./data/gaData.rda")
View(gaData)
gaData$julian <- julian(gaData$date)
head(gaData)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
lm1 <- lm(visits ~ julian , data = gaData)
abline(lm1,col="red",lwd=3)
round(exp(coef(lm(I(log(gaData$visits + 1)) ~ gaData$julian))), 5)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
abline(lm1,col="red",lwd=3);
lines(gaData$julian,glm1$fitted,col="blue",lwd=3)
plot(glm1$fitted,glm1$residuals,pch=19,col="grey",ylab="Residuals",xlab="Fitted")
library(sandwich)
confint.agnostic <- function (object, parm, level = 0.95, ...)
{
cf <- coef(object); pnames <- names(cf)
if (missing(parm))
parm <- pnames
else if (is.numeric(parm))
parm <- pnames[parm]
a <- (1 - level)/2; a <- c(a, 1 - a)
pct <- stats:::format.perc(a, 3)
fac <- qnorm(a)
ci <- array(NA, dim = c(length(parm), 2L), dimnames = list(parm,
pct))
ses <- sqrt(diag(sandwich::vcovHC(object)))[parm]
ci[] <- cf[parm] + ses %o% fac
ci
}
confint(glm1)
confint.agnostic(glm1)
?glm
# Fitting rates in R
glm2 <- glm(simplystats ~ julian,offset=log(visits+1),
family="poisson",data=gaData)
plot(julian,glm2$fitted,col="blue",pch=19,xlab="Date",ylab="Fitted Counts")
family="poisson",data=gaData)
plot(gaData$julian,glm2$fitted,col="blue",pch=19,xlab="Date",ylab="Fitted Counts")
points(gaData$julian,glm1$fitted,col="red",pch=19)
summary(glm1)$coef
summary(glm2)$coef
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(visits+1),
family="poisson",data=gaData)
plot(julian(gaData$date),gaData$simplystats/(gaData$visits+1),col="grey",xlab="Date",
ylab="Fitted Rates",pch=19)
lines(julian(gaData$date),glm2$fitted/(gaData$visits+1),col="blue",lwd=3)
library(MASS)
data(shuttle)
shuttle <- data(shuttle)
shuttle
data(shuttle)
shuttle
View(shuttle)
summary(fit1)$coef
fit1 <- glm(use ~ wind -1,data = shuttle, family = "binomial")
summary(fit1)$coef
fit1[1]
fit1$coef[1]
windhead <-fit1$coef[1]
windtail <-fit1$coef[2]
exp(windhead)/exp(windtail)
exp(windhead)
exp(windtail)
# exponentail windhead and windtail to create odds ratio
exp(windhead)/exp(windtail)
exp(windtail)/exp(windhead)
shuttle
shuttle$use <- factor(shuttle$use, levels=c("auto","nonauto"),labels=c(1,0))
shuttle
shuttle
fit1 <- glm(use ~ wind -1,data = shuttle, family = "binomial")
summary(fit1)$coef
windhead <-fit1$coef[1]
windtail <-fit1$coef[2]
exp(windtail)/exp(windhead)
fit1 <- glm(use ~ wind - 1,data = shuttle, family = "binomial")
library(MASS)
data(shuttle)
shuttle$use <- factor(shuttle$use, levels=c("auto","nonauto"),labels=c(1,0))
View(shuttle)
shuttle$use <- factor(shuttle$use, levels=c("auto","noauto"),labels=c(1,0))
View(shuttle)
shuttle$use <- factor(shuttle$use, levels=c("auto","noauto"),labels=c(1,0))
View(shuttle)
library(MASS)
data(shuttle)
shuttle$use <- factor(shuttle$use, levels=c("auto","noauto"),labels=c(1,0))
View(shuttle)
fit1 <- glm(use ~ wind - 1,data = shuttle, family = "binomial")
summary(fit1)$coef
windhead <-fit1$coef[1]
windtail <-fit1$coef[2]
exp(windtail)/exp(windhead)
